version: 2.1

executors:
  gradle_docker:
    docker:
      # This image isn't used to build Java project, rather to invoke Docker with Gradle.
      # The version of Docker on cimg/openjdk tends to be slightly behind cimg/base.
      - image: cimg/openjdk:14.0.2
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

commands:
  gradle:
    description: 'Run the provided gradle command'
    parameters:
      args:
        type: string
      when:
        default: "on_success"
        type: enum
        enum: ["on_fail", "on_success", "always"]
    steps:
      - run:
          name: << parameters.args >>
          command: ./gradlew << parameters.args >> --info --max-workers=2 -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.console=plain
          when: << parameters.when >>
  setup_build_environment:
    description: 'Checkout, restore the cache, and setup docker'
    steps:
      - checkout
      - restore_cache:
          keys: # Use gradle version for cache, so it doesn't download every time
            - v1-dependencies-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}
      # The remote docker version is independent from what's installed in the gradle_docker image and defaults to Docker 17.
      #   Use the latest value from https://circleci.com/docs/2.0/building-docker-images/#docker-version
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Dockerhub login
          command: echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
  save_populated_cache:
    description: "Save the gradle binary to the cache so it doesn't have to redownload"
    steps:
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}

jobs:
  build:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerBuildImages
      - save_populated_cache
  merge-publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerPushImages
  release-publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle: # Create version tag based off trigger
          args: :tag
      - run:
          name: Remove trigger tag
          command: git tag -d release-$(git describe --abbrev=0)
      - gradle: # Publish artifacts
          args: dockerPushImages
      - add_ssh_keys:
          fingerprints:
            - 'af:eb:74:05:48:c6:ff:d0:c4:9b:ef:06:6b:b4:fc:55'
      - run:
          name: Update remote tags
          command: git push origin :refs/tags/release-$(git describe --abbrev=0) refs/tags/$(git describe --abbrev=0)

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build:
          context:
            - dockerhub-read
      - merge-publish:
          context:
            - hypertrace-publishing
            - dockerhub-read
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - release-publish:
          context:
            - hypertrace-publishing
            - dockerhub-read
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
